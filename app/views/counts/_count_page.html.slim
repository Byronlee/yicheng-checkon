.count_head
  - if can? :create ,Examine
    - if can_count?(counts)
      = render "counts/form_create_count"
      - if defined?(range_time)&&!counts.map{|_,v| v.blank?}.all?
        = render "counts/launch_examine" ,:range_time => range_time
    - else
      .btn-group
        button.btn.btn-primary.btn-mini type="button"
          a href="#progress_detail"  data-toggle="modal" 查看
        button.btn.btn-primary.btn-mini type="button"
          a href="#cancel_examine"  data-toggle="modal"  取消
        button.btn.btn-primary.btn-mini type="button"
          a#export href="/export" data-remote="true" data-disable-with="处理.." 下载
      .progress.progress-striped.active
        .bar style="width:#{unfinish_examine.percent};"
      .progress_detail
        span #{unfinish_examine.marker}
      = render "counts/progress_detail" 
      = render "counts/cancel_examine"
  - else
    - unless unfinish_examine.blank?
      span #{unfinish_examine.start_time}至#{unfinish_examine.end_time}&nbsp;&nbsp;
      = render_cell :count , :update_examine ,:state => current_user_examine_state
ul.nav.nav-tabs#tab
  li.active
    a href="#leave" data-toggle="tab" 请假
  li
    a href="#absent" data-toggle="tab" 旷工
  li
    a href="#late" data-toggle="tab" 迟到
  li
    a href="#away" data-toggle="tab" 离职
  li.dropdown
    a href="#" class="dropdown-toggle" data-toggle="dropdown"
      span 考勤项
      b.caret
    ul.dropdown-menu
      - Settings.count_types.leave.map do |behave,name|
        li
          a href="##{behave}" data-toggle="tab" =name
#myTabContent.tab-content
  - Settings.count_types.map do |type,behaves|
    - active=type.eql?("leave") ? 'active': ''
    .tab-pane.fade.in class=active id=type
      - unless counts[type].map{|k,v|v.blank?}.all?
        = render "counts/count_result" ,:stats => counts[type].map {|k,v|v}.flatten ,:type => type
      - else
        = render_no_content
  - counts["leave"].map do |behave,value|
    .tab-pane.fade id=behave
      - unless value.blank?
        = render "counts/count_result" ,:stats =>value ,:type => behave
      - else
        = render_no_content
